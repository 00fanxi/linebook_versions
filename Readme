

//구현해야되는 것들
//1.연결 한번에 보기 : filter를 통해 검색. 노드/ 반대노드/ 이름/ 포트번호 -> 결과: 그 포트와 연결되어 있는 모든 포트를 찾아내어 출력. 끝단을 찾아내어 끝단부터 순서대로 출력하고 검색한 포트는 강조표시.
//, 출력할때 브릿지 되어 있는 포트가 있으면 브릿지 수만큼 여러갈래로 나누어서 출력.
//3.포트 위치 바꾸기
//에러 발생 후 서버 멈출시 복구하는 기능
//백업해서 불러올 수 있는 기능. 버튼 한번에 백업파일 저장하고, 버튼 한번에 불러오기
//alert('해당 백업파일 상태로 돌아가버린다.')
//alert('백업파일의 형식이 맞지않다.')
//검색 범위 옵션 (현재노드, 전체노드)

// 반대노드에서 연결이 되어있는 경우 포트에 나타나도록. 포트 삭제를 막아도 반대노드에서 포트를 삭제하면 그냥 뚤림
//1. 연결 관리에서 연결을 저장할 시 연결된 포트의 반대노드의 포트 두개에 각각 연결정보에 따라 연한 녹색/연한 오랜지색으로 바뀜
//2. 연결 해제할때도 해당 포트가 녹색에서 흰색으로 해제되는 경우 반대 노드의 연결 정보를 찾아내어 반대노드의 해당 포트가 연결되어있는지 확인후 연결되어 있으면 그 색에 맞게 연한색으로 돌아감.
//3. 포트 삭제시 연한 색도 alert
//4. 불량포트 설정시 연한 색도 alert
//5.

//1.연결 저장시 연결해제된 포트 정보와 연결된 포트 정보를 전달
//2.해당 west/east 파일을 읽어서 해당 sharenum의 portnum의 색이 녹색이나 오랜지 색이 아니면 연한 녹색이나 연한 오렌지 색이 아닌지 보고 둘 다 아니면 연한 녹색, 연한 녹색이면 연한 오렌지 색, 연한 오렌지 색이면 냅둔다.

//연결해제시 disconnected에 있으면 더 더하지 않고, new_connected에 있으면 new_connected에서 빼기만 한다. 둘다 있는 상황은 있을 수 없다. (그 상황을 방지하는게 이지랄의 목적). 둘다 없는 상황에만 disconnected에 더한다.
//연결시 disconnected에 있으면 거기서 빼고 더하지 않고, new_connected에만 있을 수는 없다. 둘다 없을떄는 그냥 더한다.

// 경우의 수는 총 4가지 1. dis에만 있다 2. new에만 있다 3.둘다 있다. 4. 둘다없다.
//1을 만드는 상황은 원래 불러올때부터 연결되어 있었던것을 해제했을 겅우. 2를 만드는 상황은 불러올 떄 없었던 것을 새로 만들었을 경우 3을 만드는 상황은 있으면 안된다. 4를 만드는 상황은 아무것도 안했을 때
